{"ast":null,"code":"const addStickyNote = (memberName, id) => {\n  // Check if the user already exists\n  db.collection('users').doc(memberName).get().then(doc => {\n    if (doc.exists) {\n      var _stickyNotes$find;\n      // User exists, add sticky note directly\n      const newStickyNoteContent = ((_stickyNotes$find = stickyNotes.find(note => note.id === id)) === null || _stickyNotes$find === void 0 ? void 0 : _stickyNotes$find.content) || '';\n      const newStickyNote = {\n        id: Date.now().toString(),\n        // Unique ID for the sticky note\n        content: newStickyNoteContent,\n        // Initial content of the sticky note\n        attachedTo: memberName // Associate the sticky note with the user\n      };\n      setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n\n      // Add sticky note data to Firestore under the user's collection\n      db.collection('users').doc(memberName).collection('stickyNotes').doc(newStickyNote.id).set(newStickyNote).then(() => {\n        console.log('Sticky note added successfully');\n      }).catch(error => {\n        console.error('Error adding sticky note: ', error);\n      });\n    } else {\n      console.log('User does not exist');\n      // Handle the case where the user does not exist\n    }\n  }).catch(error => {\n    console.error('Error checking user existence: ', error);\n  });\n};","map":{"version":3,"names":["addStickyNote","memberName","id","db","collection","doc","get","then","exists","_stickyNotes$find","newStickyNoteContent","stickyNotes","find","note","content","newStickyNote","Date","now","toString","attachedTo","setStickyNotes","prevStickyNotes","set","console","log","catch","error"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js"],"sourcesContent":["const addStickyNote = (memberName, id) => {\n    // Check if the user already exists\n    db.collection('users').doc(memberName).get()\n        .then(doc => {\n            if (doc.exists) {\n                // User exists, add sticky note directly\n                const newStickyNoteContent = stickyNotes.find(note => note.id === id)?.content || '';\n                const newStickyNote = {\n                    id: Date.now().toString(), // Unique ID for the sticky note\n                    content: newStickyNoteContent, // Initial content of the sticky note\n                    attachedTo: memberName // Associate the sticky note with the user\n                };\n\n                setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n\n                // Add sticky note data to Firestore under the user's collection\n                db.collection('users').doc(memberName).collection('stickyNotes').doc(newStickyNote.id).set(newStickyNote)\n                    .then(() => {\n                        console.log('Sticky note added successfully');\n                    })\n                    .catch(error => {\n                        console.error('Error adding sticky note: ', error);\n                    });\n            } else {\n                console.log('User does not exist');\n                // Handle the case where the user does not exist\n            }\n        })\n        .catch(error => {\n            console.error('Error checking user existence: ', error);\n        });\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAGA,CAACC,UAAU,EAAEC,EAAE,KAAK;EACtC;EACAC,EAAE,CAACC,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACJ,UAAU,CAAC,CAACK,GAAG,CAAC,CAAC,CACvCC,IAAI,CAACF,GAAG,IAAI;IACT,IAAIA,GAAG,CAACG,MAAM,EAAE;MAAA,IAAAC,iBAAA;MACZ;MACA,MAAMC,oBAAoB,GAAG,EAAAD,iBAAA,GAAAE,WAAW,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC,cAAAO,iBAAA,uBAAxCA,iBAAA,CAA0CK,OAAO,KAAI,EAAE;MACpF,MAAMC,aAAa,GAAG;QAClBb,EAAE,EAAEc,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QAAE;QAC3BJ,OAAO,EAAEJ,oBAAoB;QAAE;QAC/BS,UAAU,EAAElB,UAAU,CAAC;MAC3B,CAAC;MAEDmB,cAAc,CAACC,eAAe,IAAI,CAAC,GAAGA,eAAe,EAAEN,aAAa,CAAC,CAAC;;MAEtE;MACAZ,EAAE,CAACC,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACJ,UAAU,CAAC,CAACG,UAAU,CAAC,aAAa,CAAC,CAACC,GAAG,CAACU,aAAa,CAACb,EAAE,CAAC,CAACoB,GAAG,CAACP,aAAa,CAAC,CACpGR,IAAI,CAAC,MAAM;QACRgB,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MACjD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACV,CAAC,MAAM;MACHH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC;IACJ;EACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EAC3D,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}