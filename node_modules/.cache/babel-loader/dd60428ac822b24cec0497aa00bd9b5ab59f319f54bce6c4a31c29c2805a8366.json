{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/CreateGroup.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase/app'; // Import only the necessary Firebase modules\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateGroup() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  useEffect(() => {\n    // Fetch users from Firestore when component mounts\n    const fetchUsers = async () => {\n      try {\n        const usersCollection = await firebase.firestore().collection('users').get();\n        const usersData = usersCollection.docs.map(doc => doc.data());\n        setUsers(usersData);\n      } catch (error) {\n        console.error('Error fetching users: ', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleUserSelection = user => {\n    // Toggle user selection\n    setSelectedUsers(prevSelectedUsers => {\n      const isUserSelected = prevSelectedUsers.some(selectedUser => selectedUser.id === user.id);\n      if (isUserSelected) {\n        return prevSelectedUsers.filter(selectedUser => selectedUser.id !== user.id);\n      } else {\n        return [...prevSelectedUsers, user];\n      }\n    });\n  };\n  const handleGroupNameChange = event => {\n    setGroupName(event.target.value);\n  };\n  const createGroup = async () => {\n    try {\n      // Get current user\n      const currentUser = firebase.auth().currentUser;\n\n      // Create a new group document\n      const groupRef = await firebase.firestore().collection('groups').add({\n        groupName: groupName,\n        members: selectedUsers.map(user => user.id),\n        createdBy: currentUser.uid,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      console.log('Group created with ID:', groupRef.id);\n    } catch (error) {\n      console.error('Error creating group:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateGroup, \"NmjiESpDl67QSMCuwAuLkBdzxN8=\");\n_c = CreateGroup;\nexport default CreateGroup;\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["useState","useEffect","firebase","jsxDEV","_jsxDEV","CreateGroup","_s","users","setUsers","selectedUsers","setSelectedUsers","groupName","setGroupName","fetchUsers","usersCollection","firestore","collection","get","usersData","docs","map","doc","data","error","console","handleUserSelection","user","prevSelectedUsers","isUserSelected","some","selectedUser","id","filter","handleGroupNameChange","event","target","value","createGroup","currentUser","auth","groupRef","add","members","createdBy","uid","createdAt","FieldValue","serverTimestamp","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/CreateGroup.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport firebase from 'firebase/app'; // Import only the necessary Firebase modules\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nfunction CreateGroup() {\n    const [users, setUsers] = useState([]);\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [groupName, setGroupName] = useState('');\n\n    useEffect(() => {\n        // Fetch users from Firestore when component mounts\n        const fetchUsers = async () => {\n            try {\n                const usersCollection = await firebase.firestore().collection('users').get();\n                const usersData = usersCollection.docs.map(doc => doc.data());\n                setUsers(usersData);\n            } catch (error) {\n                console.error('Error fetching users: ', error);\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n    const handleUserSelection = (user) => {\n        // Toggle user selection\n        setSelectedUsers(prevSelectedUsers => {\n            const isUserSelected = prevSelectedUsers.some(selectedUser => selectedUser.id === user.id);\n            if (isUserSelected) {\n                return prevSelectedUsers.filter(selectedUser => selectedUser.id !== user.id);\n            } else {\n                return [...prevSelectedUsers, user];\n            }\n        });\n    };\n\n    const handleGroupNameChange = (event) => {\n        setGroupName(event.target.value);\n    };\n\n    const createGroup = async () => {\n        try {\n            // Get current user\n            const currentUser = firebase.auth().currentUser;\n\n            // Create a new group document\n            const groupRef = await firebase.firestore().collection('groups').add({\n                groupName: groupName,\n                members: selectedUsers.map(user => user.id),\n                createdBy: currentUser.uid,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n            });\n\n            console.log('Group created with ID:', groupRef.id);\n        } catch (error) {\n            console.error('Error creating group:', error);\n        }\n    };\n\n    return (\n        <div>\n            {/* Your JSX code for rendering the component */}\n        </div>\n    );\n}\n\nexport default CreateGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}