{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder'; // Import the Folder component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPage(props) {\n  _s();\n  const groupData = props.group;\n\n  // Initialize sticky notes state with default content\n  const [stickyNotes, setStickyNotes] = useState([]);\n\n  // Function to add a sticky note with default content\n  const addStickyNote = memberName => {\n    const newStickyNote = {\n      id: Date.now(),\n      content: '',\n      // Initialize with empty content\n      attachedTo: memberName\n    };\n\n    // Update sticky notes state with the new note\n    setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n  };\n\n  // Function to update the content of a sticky note\n  const updateStickyNoteContent = (id, content) => {\n    // Find the sticky note by ID and update its content\n    const updatedStickyNotes = stickyNotes.map(note => note.id === id ? {\n      ...note,\n      content: content\n    } : note);\n\n    // Update the state with the modified sticky note\n    setStickyNotes(updatedStickyNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Group Name: \", groupData.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), Array.isArray(groupData.members) && groupData.members.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: groupData.members.map((member, index) => {\n        let name = member.split('@');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: 'pointer',\n              padding: '5px',\n              border: '4px solid black',\n              borderRadius: '5px',\n              marginBottom: '10px',\n              background: 'white'\n            },\n            onClick: () => addStickyNote(name[0]),\n            children: [name[0], /*#__PURE__*/_jsxDEV(Folder, {\n              user: name[0],\n              stickyNotes: stickyNotes,\n              onUpdateContent: updateStickyNoteContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No members found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupPage, \"9IOQIjTfNxsvYZLSJohTZebx/20=\");\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","StickyNote","Folder","jsxDEV","_jsxDEV","GroupPage","props","_s","groupData","group","stickyNotes","setStickyNotes","addStickyNote","memberName","newStickyNote","id","Date","now","content","attachedTo","prevStickyNotes","updateStickyNoteContent","updatedStickyNotes","map","note","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","Array","isArray","members","length","style","listStyleType","padding","member","index","name","split","position","cursor","border","borderRadius","marginBottom","background","onClick","user","onUpdateContent","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder'; // Import the Folder component\n\nfunction GroupPage(props) {\n    const groupData = props.group;\n\n    // Initialize sticky notes state with default content\n    const [stickyNotes, setStickyNotes] = useState([]);\n\n    // Function to add a sticky note with default content\n    const addStickyNote = (memberName) => {\n        const newStickyNote = {\n            id: Date.now(),\n            content: '', // Initialize with empty content\n            attachedTo: memberName\n        };\n\n        // Update sticky notes state with the new note\n        setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n    };\n\n    // Function to update the content of a sticky note\n    const updateStickyNoteContent = (id, content) => {\n        // Find the sticky note by ID and update its content\n        const updatedStickyNotes = stickyNotes.map(note =>\n            note.id === id ? { ...note, content: content } : note\n        );\n\n        // Update the state with the modified sticky note\n        setStickyNotes(updatedStickyNotes);\n    };\n\n    return (\n        <div>\n            <h2>Group Page</h2>\n            <p>Group Name: {groupData.groupName}</p>\n            <p>Group Members</p>\n            {Array.isArray(groupData.members) && groupData.members.length > 0 ? (\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {groupData.members.map((member, index) => {\n                        let name = member.split('@');\n                        return (\n                            <div key={index} style={{ position: 'relative' }}>\n                                <li\n                                    style={{\n                                        cursor: 'pointer',\n                                        padding: '5px',\n                                        border: '4px solid black',\n                                        borderRadius: '5px',\n                                        marginBottom: '10px',\n                                        background: 'white'\n                                    }}\n                                    onClick={() => addStickyNote(name[0])}\n                                >\n                                    {name[0]}\n                                    {/* Render the Folder component for each member */}\n                                    <Folder\n                                        user={name[0]}\n                                        stickyNotes={stickyNotes}\n                                        onUpdateContent={updateStickyNoteContent}\n                                    />\n                                </li>\n                            </div>\n                        );\n                    })}\n                </ul>\n            ) : (\n                <p>No members found</p>\n            )}\n        </div>\n    );\n}\n\nexport default GroupPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}