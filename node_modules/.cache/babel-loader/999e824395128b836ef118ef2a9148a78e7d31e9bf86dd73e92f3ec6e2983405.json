{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/JoinGroup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JoinGroup() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [GroupId, setGroupId] = useState([]);\n  useEffect(() => {\n    // Fetch groups from Firestore when component mounts\n    const fetchGroups = async () => {\n      try {\n        const groupsCollection = await firebase.firestore().collection('groups').get();\n        const groupsData = groupsCollection.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        debugger;\n        setGroups(groupsData);\n        console.log(\"here is groupsdata\", groupsData);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n      }\n    };\n    fetchGroups();\n  }, [], [GroupId]);\n  const handleJoinGroup = async groupId => {\n    try {\n      const currentUser = firebase.auth().currentUser;\n      //add new features in your app and implement it yourself not with chatgpt this will be\n      // Check if the user is already a member of the group\n      const groupRef = firebase.firestore().collection('groups').doc(groupId);\n      const groupSnapshot = await groupRef.get();\n      if (groupSnapshot.exists) {\n        debugger;\n        setGroupId(groupId);\n        console.log(\"hhhhhhhhhhhhhhhhh\", GroupId);\n        const groupData = groupSnapshot.data();\n\n        // Check if the user is already a member\n        if (groupData.members && groupData.members.includes(currentUser.email)) {\n          alert('You are already a member of this group.');\n        } else {\n          // Add the user to the group\n          await groupRef.update({\n            members: firebase.firestore.FieldValue.arrayUnion(currentUser.email)\n          });\n          alert('You have joined the group successfully.');\n          history.push(`//${groupId}`); // Navigate to GroupPage\n        }\n      } else {\n        alert('Group not found.');\n      }\n    } catch (error) {\n      console.error('Error joining group:', error);\n      alert('An error occurred while joining the group. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Join Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            cursor: 'pointer',\n            padding: '5px',\n            border: '1px solid black',\n            borderRadius: '5px',\n            margin: '5px',\n            backgorundColor: 'white'\n          },\n          onClick: () => handleJoinGroup(group.id),\n          children: group.groupName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, group.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: \"/group-page\",\n        state: {\n          groupID: GroupId\n        }\n      },\n      children: \"here is link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(JoinGroup, \"N8AhgVTgnCTGN9SmmAqtpQnzbzs=\");\n_c = JoinGroup;\nexport default JoinGroup;\nvar _c;\n$RefreshReg$(_c, \"JoinGroup\");","map":{"version":3,"names":["React","useState","useEffect","firebase","useHistory","jsxDEV","_jsxDEV","JoinGroup","_s","groups","setGroups","GroupId","setGroupId","fetchGroups","groupsCollection","firestore","collection","get","groupsData","docs","map","doc","id","data","console","log","error","handleJoinGroup","groupId","currentUser","auth","groupRef","groupSnapshot","exists","groupData","members","includes","email","alert","update","FieldValue","arrayUnion","history","push","children","fileName","_jsxFileName","lineNumber","columnNumber","group","style","cursor","padding","border","borderRadius","margin","backgorundColor","onClick","groupName","Link","to","pathname","state","groupID","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/JoinGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport { useHistory } from 'react-router-dom';      \n\nfunction JoinGroup() {\n    const [groups, setGroups] = useState([]);\n \n    const[GroupId,setGroupId]=useState([]);\n\n    useEffect(() => {\n        // Fetch groups from Firestore when component mounts\n        const fetchGroups = async () => {\n            try {\n                const groupsCollection = await firebase.firestore().collection('groups').get();\n                const groupsData = groupsCollection.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n                debugger\n                setGroups(groupsData);\nconsole.log(\"here is groupsdata\",groupsData)\n            } catch (error) {\n                console.error('Error fetching groups:', error);\n            }\n        };\n    \n\n        fetchGroups();\n   \n  }, [], [GroupId]);\n  \n        const handleJoinGroup = async (groupId) => {\n        try {\n\n            const currentUser = firebase.auth().currentUser;\n//add new features in your app and implement it yourself not with chatgpt this will be\n            // Check if the user is already a member of the group\n            const groupRef = firebase.firestore().collection('groups').doc(groupId);\n            const groupSnapshot = await groupRef.get();\n\n            if (groupSnapshot.exists) {\n                debugger\n                setGroupId(groupId);\n                console.log(\"hhhhhhhhhhhhhhhhh\",GroupId)\n                const groupData = groupSnapshot.data();\n\n                // Check if the user is already a member\n                if (groupData.members && groupData.members.includes(currentUser.email)) {\n                    alert('You are already a member of this group.');\n                } else {\n                    // Add the user to the group\n                    await groupRef.update({\n                        members: firebase.firestore.FieldValue.arrayUnion(currentUser.email)\n                    });\n                    alert('You have joined the group successfully.');\n                    history.push(`//${groupId}`); // Navigate to GroupPage\n                }\n            } else {\n                alert('Group not found.');\n            }\n        } catch (error) {\n            console.error('Error joining group:', error);\n            alert('An error occurred while joining the group. Please try again later.');\n        }\n    };\n    return (\n        <div>\n        <h2>Join Group</h2>\n        <ul>\n            {groups.map(group => (\n                <li key={group.id}>\n                    <span\n                        style={{\n                            cursor: 'pointer',\n                            padding: '5px',\n                            border: '1px solid black',\n                            borderRadius: '5px',\n                            margin: '5px',\n                            backgorundColor:'white'\n                        }}\n                        onClick={() => handleJoinGroup(group.id)\n                            \n                        }\n                    >\n\n                        {group.groupName}\n                    </span>\n                </li>\n            ))}\n        </ul>\n    \n        <Link  to={{\n        pathname: \"/group-page\",\n        state: {\n          groupID: GroupId\n        }\n      }}>here is link</Link>\n\n    </div>\n    );\n}\n\nexport default JoinGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}