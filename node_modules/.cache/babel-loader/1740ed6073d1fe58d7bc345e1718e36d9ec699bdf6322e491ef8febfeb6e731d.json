{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder';\nimport firebase from 'firebase/app'; // Import Firebase\nimport \"firebase/compat/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPage(props) {\n  _s();\n  const groupData = props.group;\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const db = firebase.firestore(); // Initialize Firestore\n\n  const addStickyNote = memberName => {\n    const newStickyNote = {\n      id: Date.now().toString(),\n      // Unique ID for the sticky note\n      content: '' // Initial content of the sticky note\n    };\n    setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n\n    // Add sticky note data to Firestore\n    db.collection('stickyNotes').doc(newStickyNote.id).set(newStickyNote).then(() => {\n      console.log('Sticky note added successfully');\n    }).catch(error => {\n      console.error('Error adding sticky note: ', error);\n    });\n  };\n  const updateStickyNoteContent = (id, content) => {\n    const updatedStickyNotes = stickyNotes.map(note => note.id === id ? {\n      ...note,\n      content: content\n    } : note);\n    setStickyNotes(updatedStickyNotes);\n\n    // Update sticky note content in Firestore\n    db.collection('stickyNotes').doc(id).update({\n      content: content\n    }).then(() => {\n      console.log('Sticky note content updated successfully');\n    }).catch(error => {\n      console.error('Error updating sticky note content: ', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Group Name: \", groupData.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), Array.isArray(groupData.members) && groupData.members.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: groupData.members.map((member, index) => {\n        let name = member.split('@');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: 'pointer',\n              padding: '5px',\n              border: '4px solid black',\n              borderRadius: '5px',\n              marginBottom: '10px',\n              background: 'white'\n            },\n            onClick: () => addStickyNote(name[0]),\n            children: [name[0], /*#__PURE__*/_jsxDEV(Folder, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), stickyNotes.map(note => {\n            if (note.attachedTo === name[0]) {\n              return /*#__PURE__*/_jsxDEV(StickyNote, {\n                id: note.id,\n                content: note.content,\n                onUpdateContent: updateStickyNoteContent,\n                style: {\n                  position: 'absolute',\n                  top: '100%',\n                  left: 0,\n                  zIndex: 1\n                }\n              }, note.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this);\n            }\n            return null;\n          })]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No members found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupPage, \"9IOQIjTfNxsvYZLSJohTZebx/20=\");\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","StickyNote","Folder","firebase","jsxDEV","_jsxDEV","GroupPage","props","_s","groupData","group","stickyNotes","setStickyNotes","db","firestore","addStickyNote","memberName","newStickyNote","id","Date","now","toString","content","prevStickyNotes","collection","doc","set","then","console","log","catch","error","updateStickyNoteContent","updatedStickyNotes","map","note","update","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","Array","isArray","members","length","style","listStyleType","padding","member","index","name","split","position","cursor","border","borderRadius","marginBottom","background","onClick","attachedTo","onUpdateContent","top","left","zIndex","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder';\nimport firebase from 'firebase/app'; // Import Firebase\nimport \"firebase/compat/firestore\"\nfunction GroupPage(props) {\n    const groupData = props.group;\n    const [stickyNotes, setStickyNotes] = useState([]);\n    const db = firebase.firestore(); // Initialize Firestore\n\n    const addStickyNote = (memberName) => {\n        const newStickyNote = {\n            id: Date.now().toString(), // Unique ID for the sticky note\n            content: '', // Initial content of the sticky note\n        };\n\n        setStickyNotes(prevStickyNotes => [...prevStickyNotes, newStickyNote]);\n\n        // Add sticky note data to Firestore\n        db.collection('stickyNotes').doc(newStickyNote.id).set(newStickyNote)\n            .then(() => {\n                console.log('Sticky note added successfully');\n            })\n            .catch(error => {\n                console.error('Error adding sticky note: ', error);\n            });\n    };\n\n    const updateStickyNoteContent = (id, content) => {\n        const updatedStickyNotes = stickyNotes.map(note =>\n            note.id === id ? { ...note, content: content } : note\n        );\n\n        setStickyNotes(updatedStickyNotes);\n\n        // Update sticky note content in Firestore\n        db.collection('stickyNotes').doc(id).update({ content: content })\n            .then(() => {\n                console.log('Sticky note content updated successfully');\n            })\n            .catch(error => {\n                console.error('Error updating sticky note content: ', error);\n            });\n    };\n\n    return (\n        <div>\n            <h2>Group Page</h2>\n            <p>Group Name: {groupData.groupName}</p>\n            <p>Group Members</p>\n            {Array.isArray(groupData.members) && groupData.members.length > 0 ? (\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {groupData.members.map((member, index) => {\n                        let name = member.split('@');\n                        return (\n                            <div key={index} style={{ position: 'relative' }}>\n                                <li\n                                    style={{\n                                        cursor: 'pointer',\n                                        padding: '5px',\n                                        border: '4px solid black',\n                                        borderRadius: '5px',\n                                        marginBottom: '10px',\n                                        background: 'white'\n                                    }}\n                                    onClick={() => addStickyNote(name[0])}\n                                >\n                                    {name[0]}\n                                    <Folder />\n                                </li>\n                                {/* Render sticky notes attached to this member */}\n                                {stickyNotes.map(note => {\n                                    if (note.attachedTo === name[0]) {\n                                        return (\n                                            <StickyNote\n                                                key={note.id}\n                                                id={note.id}\n                                                content={note.content}\n                                                onUpdateContent={updateStickyNoteContent}\n                                                style={{\n                                                    position: 'absolute',\n                                                    top: '100%',\n                                                    left: 0,\n                                                    zIndex: 1\n                                                }}\n                                            />\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </div>\n                        );\n                    })}\n                </ul>\n            ) : (\n                <p>No members found</p>\n            )}\n        </div>\n    );\n}\n\nexport default GroupPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}