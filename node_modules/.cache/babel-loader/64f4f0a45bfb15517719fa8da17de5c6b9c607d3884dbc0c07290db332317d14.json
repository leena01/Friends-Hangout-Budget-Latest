{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js\",\n  _s = $RefreshSig$();\n// GroupPage.js\n\nimport React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPage(props) {\n  _s();\n  // Accessing the 'group' prop passed from the parent component\n  const groupData = props.group;\n  // State to manage sticky notes\n  const [stickyNotes, setStickyNotes] = useState([]);\n\n  // Function to add a sticky note\n  const addStickyNote = memberName => {\n    // Create a new sticky note object\n    const newStickyNote = {\n      id: Date.now(),\n      // Unique ID for the sticky note\n      content: '',\n      // Initial content of the sticky note\n      attachedTo: memberName // Member name to which the sticky note is attached\n    };\n\n    // Update the state to include the new sticky note\n    setStickyNotes([...stickyNotes, newStickyNote]);\n  };\n  // Function to update the content of a sticky note\n  const updateStickyNoteContent = (id, content) => {\n    // Find the sticky note by ID and update its content\n    const updatedStickyNotes = stickyNotes.map(note => note.id === id ? {\n      ...note,\n      content: content\n    } : note);\n\n    // Update the state with the modified sticky note\n    setStickyNotes(updatedStickyNotes);\n  };\n  console.log(\"here is group data\", groupData);\n  // Render the group data\n  // Render the group data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Group Name: \", groupData.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), Array.isArray(groupData.members) && groupData.members.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: groupData.members.map((member, index) => {\n        let name = member.split('@');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: 'pointer',\n              padding: '5px',\n              border: '4px solid black',\n              borderRadius: '5px',\n              marginBottom: '10px',\n              background: 'white'\n            },\n            onClick: () => addStickyNote(name[0]) // Attach sticky note to the member\n            ,\n            children: name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), stickyNotes.map(note => {\n            if (note.attachedTo === name[0]) {\n              return /*#__PURE__*/_jsxDEV(StickyNote, {\n                id: note.id,\n                content: note.content,\n                onUpdateContent: updateStickyNoteContent\n              }, note.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this);\n            }\n            return null;\n          })]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No members found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: stickyNotes.map(note => /*#__PURE__*/_jsxDEV(StickyNote, {\n        id: note.id,\n        content: note.content,\n        onUpdateContent: updateStickyNoteContent\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupPage, \"9IOQIjTfNxsvYZLSJohTZebx/20=\");\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","StickyNote","jsxDEV","_jsxDEV","GroupPage","props","_s","groupData","group","stickyNotes","setStickyNotes","addStickyNote","memberName","newStickyNote","id","Date","now","content","attachedTo","updateStickyNoteContent","updatedStickyNotes","map","note","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","Array","isArray","members","length","style","listStyleType","padding","member","index","name","split","cursor","border","borderRadius","marginBottom","background","onClick","onUpdateContent","marginTop","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js"],"sourcesContent":["// GroupPage.js\n\nimport React, { useState } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nfunction GroupPage(props) {\n    // Accessing the 'group' prop passed from the parent component\n    const groupData = props.group;\n      // State to manage sticky notes\n      const [stickyNotes, setStickyNotes] = useState([]);\n\n      // Function to add a sticky note\n      const addStickyNote = (memberName) => {\n          // Create a new sticky note object\n          const newStickyNote = {\n              id: Date.now(), // Unique ID for the sticky note\n              content: '', // Initial content of the sticky note\n              attachedTo: memberName // Member name to which the sticky note is attached\n          };\n  \n          // Update the state to include the new sticky note\n          setStickyNotes([...stickyNotes, newStickyNote]);\n      };\n        // Function to update the content of a sticky note\n    const updateStickyNoteContent = (id, content) => {\n        // Find the sticky note by ID and update its content\n        const updatedStickyNotes = stickyNotes.map(note =>\n            note.id === id ? { ...note, content: content } : note\n        );\n\n        // Update the state with the modified sticky note\n        setStickyNotes(updatedStickyNotes);\n    };\n\nconsole.log(\"here is group data\",groupData)\n    // Render the group data\n     // Render the group data\n     return (\n        <div>\n            <h2>Group Page</h2>\n            <p>Group Name: {groupData.groupName}</p>\n            <p>Group Members</p>\n            {Array.isArray(groupData.members) && groupData.members.length > 0 ? (\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                 {groupData.members.map((member, index) => {\n    let name = member.split('@');\n    return (\n        <div key={index}>\n            <span\n                style={{\n                    cursor: 'pointer',\n                    padding: '5px',\n                    border: '4px solid black',\n                    borderRadius: '5px',\n                    marginBottom: '10px',\n                    background: 'white'\n                }}\n                onClick={() => addStickyNote(name[0])} // Attach sticky note to the member\n            >\n                {name[0]}\n            </span>\n            {/* Render sticky notes attached to this member */}\n            {stickyNotes.map(note => {\n                if (note.attachedTo === name[0]) {\n                    return (\n                        <StickyNote\n                            key={note.id}\n                            id={note.id}\n                            content={note.content}\n                            onUpdateContent={updateStickyNoteContent}\n                        />\n                    );\n                }\n                return null;\n            })}\n        </div>\n    );\n})}\n                </ul>\n            ) : (\n                <p>No members found</p>\n            )}\n\n            {/* Render sticky notes */}\n            <div style={{ marginTop: '20px' }}>\n                {stickyNotes.map(note => (\n                    <StickyNote\n                        key={note.id}\n                        id={note.id}\n                        content={note.content}\n                        onUpdateContent={updateStickyNoteContent}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default GroupPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}