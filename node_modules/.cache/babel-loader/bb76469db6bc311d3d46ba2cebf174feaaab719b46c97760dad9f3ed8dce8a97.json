{"ast":null,"code":"var _jsxFileName = \"/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder';\nimport { collection, getDocs, addDoc, updateDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { app } from ''; // Import your Firebase Firestore instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupPage(props) {\n  _s();\n  const groupData = props.group;\n  const [stickyNotes, setStickyNotes] = useState([]);\n  const [selectedMember, setSelectedMember] = useState(null);\n  useEffect(() => {\n    const fetchStickyNotes = async () => {\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const userId = currentUser.uid;\n        const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n        const querySnapshot = await getDocs(notesCollectionRef);\n        const notes = [];\n        querySnapshot.forEach(doc => {\n          notes.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        setStickyNotes(notes);\n      }\n    };\n    fetchStickyNotes();\n  }, []);\n  const addStickyNote = async memberName => {\n    const newStickyNote = {\n      content: '',\n      attachedTo: memberName\n    };\n    try {\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const userId = currentUser.uid;\n        const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n        const docRef = await addDoc(notesCollectionRef, newStickyNote);\n        setStickyNotes(prevStickyNotes => [...prevStickyNotes, {\n          id: docRef.id,\n          ...newStickyNote\n        }]);\n      }\n    } catch (error) {\n      console.error('Error adding sticky note: ', error);\n    }\n  };\n  const updateStickyNoteContent = async (id, content) => {\n    try {\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        const userId = currentUser.uid;\n        const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n        const noteRef = doc(app, 'Users', userId, 'stickyNotes', id);\n        await updateDoc(noteRef, {\n          content\n        });\n        const updatedNotes = stickyNotes.map(note => note.id === id ? {\n          ...note,\n          content\n        } : note);\n        setStickyNotes(updatedNotes);\n      }\n    } catch (error) {\n      console.error('Error updating sticky note: ', error);\n    }\n  };\n  const onViewNotes = memberName => {\n    setSelectedMember(memberName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Group Name: \", groupData.groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), Array.isArray(groupData.members) && groupData.members.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: groupData.members.map((member, index) => {\n        let name = member.split('@');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: 'pointer',\n              padding: '5px',\n              border: '4px solid black',\n              borderRadius: '5px',\n              marginBottom: '10px',\n              background: 'white'\n            },\n            onClick: () => addStickyNote(name[0]),\n            children: [name[0], /*#__PURE__*/_jsxDEV(Folder, {\n              memberName: name[0],\n              stickyNotes: stickyNotes,\n              onViewNotes: onViewNotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No members found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), selectedMember && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Sticky Notes for \", selectedMember]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), stickyNotes.map(note => {\n        if (note.attachedTo === selectedMember) {\n          return /*#__PURE__*/_jsxDEV(StickyNote, {\n            id: note.id,\n            content: note.content,\n            onUpdateContent: updateStickyNoteContent\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this);\n        }\n        return null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupPage, \"C0zRonbMK5HNIMCUTgrax29s1+U=\");\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["React","useState","useEffect","StickyNote","Folder","collection","getDocs","addDoc","updateDoc","doc","getAuth","app","jsxDEV","_jsxDEV","GroupPage","props","_s","groupData","group","stickyNotes","setStickyNotes","selectedMember","setSelectedMember","fetchStickyNotes","auth","currentUser","userId","uid","notesCollectionRef","querySnapshot","notes","forEach","push","id","data","addStickyNote","memberName","newStickyNote","content","attachedTo","docRef","prevStickyNotes","error","console","updateStickyNoteContent","noteRef","updatedNotes","map","note","onViewNotes","children","fileName","_jsxFileName","lineNumber","columnNumber","groupName","Array","isArray","members","length","style","listStyleType","padding","member","index","name","split","position","cursor","border","borderRadius","marginBottom","background","onClick","onUpdateContent","_c","$RefreshReg$"],"sources":["/home/bahl/react FriendsHangout app/hangout-budget-app/src/component/GroupOptions/GroupPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StickyNote from '../StickyNote/StickyNote';\nimport Folder from '../Folder/Folder';\nimport { collection, getDocs, addDoc, updateDoc, doc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { app } from ''; // Import your Firebase Firestore instance\n\nfunction GroupPage(props) {\n    const groupData = props.group;\n    const [stickyNotes, setStickyNotes] = useState([]);\n    const [selectedMember, setSelectedMember] = useState(null);\n\n    useEffect(() => {\n        const fetchStickyNotes = async () => {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n\n            if (currentUser) {\n                const userId = currentUser.uid;\n                const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n                const querySnapshot = await getDocs(notesCollectionRef);\n                const notes = [];\n                querySnapshot.forEach((doc) => {\n                    notes.push({ id: doc.id, ...doc.data() });\n                });\n                setStickyNotes(notes);\n            }\n        };\n\n        fetchStickyNotes();\n    }, []);\n\n    const addStickyNote = async (memberName) => {\n        const newStickyNote = {\n            content: '',\n            attachedTo: memberName\n        };\n\n        try {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n\n            if (currentUser) {\n                const userId = currentUser.uid;\n                const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n                const docRef = await addDoc(notesCollectionRef, newStickyNote);\n                setStickyNotes(prevStickyNotes => [...prevStickyNotes, { id: docRef.id, ...newStickyNote }]);\n            }\n        } catch (error) {\n            console.error('Error adding sticky note: ', error);\n        }\n    };\n\n    const updateStickyNoteContent = async (id, content) => {\n        try {\n            const auth = getAuth();\n            const currentUser = auth.currentUser;\n\n            if (currentUser) {\n                const userId = currentUser.uid;\n                const notesCollectionRef = collection(app, 'Users', userId, 'stickyNotes');\n                const noteRef = doc(app, 'Users', userId, 'stickyNotes', id);\n                await updateDoc(noteRef, { content });\n                const updatedNotes = stickyNotes.map(note => note.id === id ? { ...note, content } : note);\n                setStickyNotes(updatedNotes);\n            }\n        } catch (error) {\n            console.error('Error updating sticky note: ', error);\n        }\n    };\n\n    const onViewNotes = (memberName) => {\n        setSelectedMember(memberName);\n    };\n\n    return (\n        <div>\n            <h2>Group Page</h2>\n            <p>Group Name: {groupData.groupName}</p>\n            <p>Group Members</p>\n            {Array.isArray(groupData.members) && groupData.members.length > 0 ? (\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {groupData.members.map((member, index) => {\n                        let name = member.split('@');\n                        return (\n                            <div key={index} style={{ position: 'relative' }}>\n                                <li\n                                    style={{\n                                        cursor: 'pointer',\n                                        padding: '5px',\n                                        border: '4px solid black',\n                                        borderRadius: '5px',\n                                        marginBottom: '10px',\n                                        background: 'white'\n                                    }}\n                                    onClick={() => addStickyNote(name[0])}\n                                >\n                                    {name[0]}\n                                    <Folder\n                                        memberName={name[0]}\n                                        stickyNotes={stickyNotes}\n                                        onViewNotes={onViewNotes}\n                                    />\n                                </li>\n                            </div>\n                        );\n                    })}\n                </ul>\n            ) : (\n                <p>No members found</p>\n            )}\n\n            {selectedMember && (\n                <div>\n                    <h3>Sticky Notes for {selectedMember}</h3>\n                    {stickyNotes.map(note => {\n                        if (note.attachedTo === selectedMember) {\n                            return (\n                                <StickyNote\n                                    key={note.id}\n                                    id={note.id}\n                                    content={note.content}\n                                    onUpdateContent={updateStickyNoteContent}\n                                />\n                            );\n                        }\n                        return null;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default GroupPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}